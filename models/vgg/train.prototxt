## VGG model - EAST
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "score_map"
  top: "geo_map"
  python_param {
    module: "pylayerUtils"
    layer: "DataLayer"
    param_str: "{\'batch_size\': 4}"
  }
}
# layer {
  # name: "data"
  # type: "Input"
  # top: "data"
  # input_param {
    # shape {
      # dim: 1
      # dim: 3
      # dim: 512
      # dim: 512
    # }
  # }
# }
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
    pad: 0
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
    pad: 0
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
    pad: 0
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
    pad: 0
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "sconv5_1"
  type: "Convolution"
  bottom: "conv5_3"
  top: "sconv5_1"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "srelu5_1"
  type: "ReLU"
  bottom: "sconv5_1"
  top: "sconv5_1"
}
layer {
  name: "sconv5_2"
  type: "Convolution"
  bottom: "sconv5_1"
  top: "sconv5_2"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "srelu5_2"
  type: "ReLU"
  bottom: "sconv5_2"
  top: "sconv5_2"
}
layer {
  name: "sconv5_3"
  type: "Convolution"
  bottom: "sconv5_2"
  top: "sconv5_3"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "srelu5_3"
  type: "ReLU"
  bottom: "sconv5_3"
  top: "sconv5_3"
}
layer {
  name: "ups5"
  type: "Deconvolution"
  bottom: "sconv5_3"
  top: "ups5"
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 2
    kernel_size: 8
    stride: 4
  }
}
# layer {
  # name: "ups5"
  # type: "Deconvolution"
  # bottom: "sconv5_3"
  # top: "ups5"
  # convolution_param {
    # kernel_size: 8
	# stride: 4
    # num_output: 256
	# group: 256
    # pad: 2
    # weight_filler: { type: "bilinear" } 
	# bias_term: false
  # }
  # param { 
  # lr_mult: 0 
  # decay_mult: 0 
  # }
# }
layer {
  name: "sconv4_1"
  type: "Convolution"
  bottom: "conv4_3"
  top: "sconv4_1"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "srelu4_1"
  type: "ReLU"
  bottom: "sconv4_1"
  top: "sconv4_1"
}
layer {
  name: "sconv4_2"
  type: "Convolution"
  bottom: "sconv4_1"
  top: "sconv4_2"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "srelu4_2"
  type: "ReLU"
  bottom: "sconv4_2"
  top: "sconv4_2"
}
layer {
  name: "sconv4_3"
  type: "Convolution"
  bottom: "sconv4_2"
  top: "sconv4_3"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "srelu4_3"
  type: "ReLU"
  bottom: "sconv4_3"
  top: "sconv4_3"
}
layer {
  name: "ups4"
  type: "Deconvolution"
  bottom: "sconv4_3"
  top: "ups4"
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 4
    stride: 2
  }
}
# layer {
  # name: "ups4"
  # type: "Deconvolution"
  # bottom: "sconv4_3"
  # top: "ups4"
  # convolution_param {
    # kernel_size: 4
	# stride: 2
    # num_output: 256
	# group: 256
    # pad: 1
    # weight_filler: { type: "bilinear" } 
	# bias_term: false
  # }
  # param { 
  # lr_mult: 0 
  # decay_mult: 0 
  # }
# }
layer {
  name: "sconv3_1"
  type: "Convolution"
  bottom: "conv3_3"
  top: "sconv3_1"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "srelu3_1"
  type: "ReLU"
  bottom: "sconv3_1"
  top: "sconv3_1"
}
layer {
  name: "sconv3_2"
  type: "Convolution"
  bottom: "sconv3_1"
  top: "sconv3_2"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "srelu3_2"
  type: "ReLU"
  bottom: "sconv3_2"
  top: "sconv3_2"
}
layer {
  name: "sconv3_3"
  type: "Convolution"
  bottom: "sconv3_2"
  top: "sconv3_3"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "srelu3_3"
  type: "ReLU"
  bottom: "sconv3_3"
  top: "sconv3_3"
}
layer {
  name: "sconcat"
  type: "Concat"
  bottom: "sconv3_3"
  bottom: "ups4"
  bottom: "ups5"
  top: "sconcat"
  concat_param {
    concat_dim: 1
  }
}
layer {
  name: "fconv1"
  type: "Convolution"
  bottom: "sconcat"
  top: "fconv1"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "frelu1"
  type: "ReLU"
  bottom: "fconv1"
  top: "fconv1"
}
layer {
  name: "fconv2"
  type: "Convolution"
  bottom: "fconv1"
  top: "fconv2"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "frelu2"
  type: "ReLU"
  bottom: "fconv2"
  top: "fconv2"
}

## 生成scoremap
layer {
  name: "f_score"
  type: "Convolution"
  bottom: "fconv2"
  top: "f_score"
  param {
    lr_mult: 10.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 20.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 1
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "F_score"
  bottom: "f_score"
  top: "f_score"
  type: "Sigmoid"
}

## 生成geomap
layer {
  name: "f_geo"
  type: "Convolution"
  bottom: "fconv2"
  top: "f_geo"
  param {
    lr_mult: 10.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 20.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 4
 #   bias_term: false
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "geomap_sigmoid"
  bottom: "f_geo"
  top: "f_geo"
  type: "Sigmoid"
}
layer {
  name: "geomap"
  bottom: "f_geo"
  top: "geomap"  # 1*4*128*128
  type: "Power"
  ## f(x)= (shift + scale * x) ^ power
  power_param {
    power: 1
    ## * FLAGS.text_scale
    scale: 512  
    shift: 0
  }
}
## 生成anglemap
layer {
  name: "f_angle"
  type: "Convolution"
  bottom: "fconv2"
  top: "f_angle"
  param {
    lr_mult: 10.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 20.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 1
  #  bias_term: false
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "anglemap_sigmoid"
  bottom: "f_angle"
  top: "f_angle"
  type: "Sigmoid"
}
layer {
  name: "anglemap_tmp"
  bottom: "f_angle"
  top: "anglemap_tmp"
  type: "Power"
  ## f(x)= (shift + scale * x) ^ power
  power_param {
    power: 1
    scale: 1
    shift: -0.5
  }
}
layer {
  name: "anglemap"
  bottom: "anglemap_tmp"
  top: "anglemap" # 1*1*128*128
  type: "Power"
  ## f(x)= (shift + scale * x) ^ power
  power_param {
    power: 1
    scale: 1.57
    shift: 0
  }
}
layer {
  name: "F_geometry"
  type: "Concat"
  bottom: "geomap"
  bottom: "anglemap"
  top: "geo_concat"  # 1*5*128*128 (4+1)
  concat_param {
    concat_dim: 1
  }
}

## 计算Loss
layer {
  name: "Loss_rbox"
  type: "Python"
  bottom: "geo_concat"  # 1*5*128*128 (4+1)
  bottom: "geo_map"  # 1*5*128*128 (4+1)
  bottom: "score_map" # scoremap的ture_gt 1*1*128*128
  top: "Loss_rbox"
  loss_weight: 1
  python_param {
    module: "pylayerUtils"
    layer: "RBoxLossLayer"
  }
}
 layer {
  name: "Loss_score"
  type: "DiceCoefLoss"
  bottom: "f_score"
  bottom: "score_map"
  top: "Loss_score"
  loss_weight: 0.01
 }
# layer {
  # name: "Loss_score"
  # type: "Python"
  # bottom: "f_score"
  # bottom: "score_map"
  # top: "Loss_score"
  # loss_weight: 0.01
  # python_param {
    # module: "pylayerUtils"
    # layer: "DiceCoefLossLayer"
  # }
# }
